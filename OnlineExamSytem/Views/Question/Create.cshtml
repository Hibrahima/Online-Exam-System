@model OnlineExamSytem.Models.Question

@{
    ViewBag.Title = "Create";
}

<div class="row" style="margin-bottom:10px;">
    <div class="col-sm-12">
        @Html.Partial("_QuestionPartial")
    </div>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-6">
                @Html.ValidationSummary(true,"", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.questionLabel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.questionLabel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.questionLabel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.choiceA, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.choiceA, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.choiceA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.choiceB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.choiceB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.choiceB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.choiceC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.choiceC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.choiceC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.choiceD, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.choiceD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.choiceD, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.answer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.answer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-sm-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                      @*  @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
    @Html.DropDownListFor(m => m.category, (SelectList)ViewBag.category, new { @class = "form-control" }) *@
                        @Html.DropDownListFor(m => m.category, (SelectList)ViewBag.category, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.level, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.level, (SelectList)ViewBag.level, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.level, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.points, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.points, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.points, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.language, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.language, (SelectList)ViewBag.languages, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.language, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.time, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.time, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.time, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.status, (SelectList)ViewBag.status, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" style="margin-top:60px; margin-left:200px;" />
                    </div>
                </div>
           </div>
               
            </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}